// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InvertedButton accepts textStyle prop 1`] = `
<View
  accessible={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgba(51, 51, 51, 1)",
      "borderColor": "rgba(248, 248, 248, 1)",
      "borderRadius": 2,
      "borderWidth": 1,
      "height": 46,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    className="sc-bdVaJa bDWFJH"
    color="white"
    ellipsizeMode="tail"
    fontFamily="Unica77LL-Medium"
    fontSize="14px"
    lineHeight="24px"
    style={
      Array [
        Object {
          "color": "white",
          "fontFamily": "Unica77LL-Medium",
          "fontSize": 14,
          "lineHeight": 24,
        },
        undefined,
      ]
    }
  >
    I am an inverted button
  </Text>
</View>
`;

exports[`InvertedButton renders properly 1`] = `
<View
  accessible={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgba(51, 51, 51, 1)",
      "borderColor": "rgba(248, 248, 248, 1)",
      "borderRadius": 2,
      "borderWidth": 1,
      "height": 46,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    className="sc-bdVaJa bDWFJH"
    color="white"
    ellipsizeMode="tail"
    fontFamily="Unica77LL-Medium"
    fontSize="14px"
    lineHeight="24px"
    style={
      Array [
        Object {
          "color": "white",
          "fontFamily": "Unica77LL-Medium",
          "fontSize": 14,
          "lineHeight": 24,
        },
        undefined,
      ]
    }
  >
    I am an inverted button
  </Text>
</View>
`;

exports[`InvertedButtonWithSpinner accepts textStyle prop 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgba(0, 0, 0, 1)",
      "borderRadius": 2,
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={null}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontSize": 14,
          },
          Object {
            "color": "white",
            "fontSize": 20,
            "opacity": 1,
          },
          Object {
            "fontFamily": "Unica77LL-Medium",
          },
        ]
      }
    >
      I am an inverted button
    </Text>
  </View>
</View>
`;

exports[`InvertedButtonWithSpinner renders properly 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgba(0, 0, 0, 1)",
      "borderRadius": 2,
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={null}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "fontSize": 14,
          },
          Object {
            "color": "white",
            "opacity": 1,
          },
          Object {
            "fontFamily": "Unica77LL-Medium",
          },
        ]
      }
    >
      I am an inverted button
    </Text>
  </View>
</View>
`;
