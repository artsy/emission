// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly at iPhone size 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexDirection": "row",
      "flexWrap": "wrap",
      "justifyContent": "center",
    }
  }
  dataSource={
    ListViewDataSource {
      "items": 4,
    }
  }
  renderRow={[Function]}
  renderScrollComponent={[Function]}
>
  <View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderColor": null,
          "borderWidth": 2,
          "height": 158,
          "justifyContent": "center",
          "margin": 4,
          "opacity": 1,
          "width": 158,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={1}
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "backgroundColor": "#e5e5e5",
            "borderColor": null,
            "borderWidth": 2,
            "height": 158,
            "margin": 4,
            "width": 158,
          },
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={
          Object {
            "uri": "https://d32dm0rphc51dk.cloudfront.net/WAlGHmjlxTn3USMllNt4rA/large.jpg",
          }
        }
        style={
          Object {
            "height": 154,
            "width": 154,
          }
        }
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "backgroundColor": "#e5e5e5",
            "borderColor": null,
            "borderWidth": 2,
            "height": 158,
            "margin": 4,
            "width": 158,
          },
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={
          Object {
            "uri": "https://d32dm0rphc51dk.cloudfront.net/WAlGHmjlxTn3USMllNt4rA/large.jpg",
          }
        }
        style={
          Object {
            "height": 154,
            "width": 154,
          }
        }
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "backgroundColor": "#e5e5e5",
            "borderColor": null,
            "borderWidth": 2,
            "height": 158,
            "margin": 4,
            "width": 158,
          },
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Image
        source={
          Object {
            "uri": "https://d32dm0rphc51dk.cloudfront.net/WAlGHmjlxTn3USMllNt4rA/large.jpg",
          }
        }
        style={
          Object {
            "height": 154,
            "width": 154,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;
