// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search states:  Looks right when Found four results 1`] = `
<View>
  <View
    style={
      Array [
        undefined,
        Object {
          "flex": 1,
          "maxHeight": 40,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "height": 40,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={false}
        autoFocus={false}
        clearButtonMode="while-editing"
        keyboardAppearance="dark"
        onBlur={[Function]}
        onChangeText={undefined}
        onFocus={[Function]}
        placeholder="Artist/Designer Name"
        placeholderTextColor="#666666"
        returnKeyType="search"
        selectionColor="#cccccc"
        style={
          Array [
            Object {
              "backgroundColor": "black",
              "color": "white",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontFamily": "AGaramondPro-Regular",
              "fontSize": 20,
              "height": 40,
            },
            undefined,
          ]
        }
        value="bank"
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#666666",
          "height": 1,
        }
      }
    />
  </View>
  <RCTScrollView
    keyboardShouldPersistTaps="always"
    scrollEnabled={true}
    style={
      Object {
        "height": 182,
        "paddingTop": 16,
      }
    }
  >
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 40,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <Image
            source={
              Object {
                "uri": "https://d32dm0rphc51dk.cloudfront.net/X9vVvod7QY73ZwLDSZzljw/square.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 40,
                  "width": 40,
                },
                undefined,
              ]
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "white",
                  "fontFamily": "AGaramondPro-Regular",
                  "fontSize": 20,
                  "marginLeft": 13,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            Ada Van Hoorebeke
          </Text>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 40,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <Image
            source={
              Object {
                "uri": "https://d32dm0rphc51dk.cloudfront.net/X9vVvod7QY73ZwLDSZzljw/square.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 40,
                  "width": 40,
                },
                undefined,
              ]
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "white",
                  "fontFamily": "AGaramondPro-Regular",
                  "fontSize": 20,
                  "marginLeft": 13,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            Kathleen Adair Brown
          </Text>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 40,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <Image
            source={
              Object {
                "uri": "https://d32dm0rphc51dk.cloudfront.net/X9vVvod7QY73ZwLDSZzljw/square.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 40,
                  "width": 40,
                },
                undefined,
              ]
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "white",
                  "fontFamily": "AGaramondPro-Regular",
                  "fontSize": 20,
                  "marginLeft": 13,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            Linda Adair
          </Text>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 40,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <Image
            source={
              Object {
                "uri": "https://d32dm0rphc51dk.cloudfront.net/X9vVvod7QY73ZwLDSZzljw/square.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 40,
                  "width": 40,
                },
                undefined,
              ]
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "white",
                  "fontFamily": "AGaramondPro-Regular",
                  "fontSize": 20,
                  "marginLeft": 13,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            Hector Adalid
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Search states:  Looks right when Found no results 1`] = `
<View>
  <View
    style={
      Array [
        undefined,
        Object {
          "flex": 1,
          "maxHeight": 40,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "height": 40,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={false}
        autoFocus={false}
        clearButtonMode="while-editing"
        keyboardAppearance="dark"
        onBlur={[Function]}
        onChangeText={undefined}
        onFocus={[Function]}
        placeholder="Artist/Designer Name"
        placeholderTextColor="#666666"
        returnKeyType="search"
        selectionColor="#cccccc"
        style={
          Array [
            Object {
              "backgroundColor": "black",
              "color": "white",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontFamily": "AGaramondPro-Regular",
              "fontSize": 20,
              "height": 40,
            },
            undefined,
          ]
        }
        value="ba"
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#666666",
          "height": 1,
        }
      }
    />
  </View>
  <RCTScrollView
    keyboardShouldPersistTaps="always"
    scrollEnabled={false}
    style={
      Object {
        "height": 182,
        "paddingTop": 16,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#cccccc",
              "fontFamily": "AGaramondPro-Regular",
              "fontSize": 17,
            },
            undefined,
          ]
        }
      >
        Unfortunately we are not accepting consignments for works by
         
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#cccccc",
                "fontFamily": "AGaramondPro-Italic",
                "fontSize": 17,
              },
              undefined,
            ]
          }
        >
          ba
        </Text>
      </Text>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Search states:  Looks right when Found one result 1`] = `
<View>
  <View
    style={
      Array [
        undefined,
        Object {
          "flex": 1,
          "maxHeight": 40,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "height": 40,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={false}
        autoFocus={false}
        clearButtonMode="while-editing"
        keyboardAppearance="dark"
        onBlur={[Function]}
        onChangeText={undefined}
        onFocus={[Function]}
        placeholder="Artist/Designer Name"
        placeholderTextColor="#666666"
        returnKeyType="search"
        selectionColor="#cccccc"
        style={
          Array [
            Object {
              "backgroundColor": "black",
              "color": "white",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontFamily": "AGaramondPro-Regular",
              "fontSize": 20,
              "height": 40,
            },
            undefined,
          ]
        }
        value="ban"
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#666666",
          "height": 1,
        }
      }
    />
  </View>
  <RCTScrollView
    keyboardShouldPersistTaps="always"
    scrollEnabled={true}
    style={
      Object {
        "height": 182,
        "paddingTop": 16,
      }
    }
  >
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 40,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <Image
            source={
              Object {
                "uri": "https://d32dm0rphc51dk.cloudfront.net/X9vVvod7QY73ZwLDSZzljw/square.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 40,
                  "width": 40,
                },
                undefined,
              ]
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "white",
                  "fontFamily": "AGaramondPro-Regular",
                  "fontSize": 20,
                  "marginLeft": 13,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            Banksy
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Search states:  Looks right when Found one result, and searching 1`] = `
<View>
  <View
    style={
      Array [
        undefined,
        Object {
          "flex": 1,
          "maxHeight": 40,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "height": 40,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={false}
        autoFocus={false}
        clearButtonMode="while-editing"
        keyboardAppearance="dark"
        onBlur={[Function]}
        onChangeText={undefined}
        onFocus={[Function]}
        placeholder="Artist/Designer Name"
        placeholderTextColor="#666666"
        returnKeyType="search"
        selectionColor="#cccccc"
        style={
          Array [
            Object {
              "backgroundColor": "black",
              "color": "white",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontFamily": "AGaramondPro-Regular",
              "fontSize": 20,
              "height": 40,
            },
            undefined,
          ]
        }
        value="ban"
      />
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="small"
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#666666",
          "height": 1,
        }
      }
    />
  </View>
  <RCTScrollView
    keyboardShouldPersistTaps="always"
    scrollEnabled={true}
    style={
      Object {
        "height": 182,
        "paddingTop": 16,
      }
    }
  >
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 40,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <Image
            source={
              Object {
                "uri": "https://d32dm0rphc51dk.cloudfront.net/X9vVvod7QY73ZwLDSZzljw/square.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 40,
                  "width": 40,
                },
                undefined,
              ]
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "white",
                  "fontFamily": "AGaramondPro-Regular",
                  "fontSize": 20,
                  "marginLeft": 13,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            Banksy
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Search states:  Looks right when Found two results 1`] = `
<View>
  <View
    style={
      Array [
        undefined,
        Object {
          "flex": 1,
          "maxHeight": 40,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "height": 40,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={false}
        autoFocus={false}
        clearButtonMode="while-editing"
        keyboardAppearance="dark"
        onBlur={[Function]}
        onChangeText={undefined}
        onFocus={[Function]}
        placeholder="Artist/Designer Name"
        placeholderTextColor="#666666"
        returnKeyType="search"
        selectionColor="#cccccc"
        style={
          Array [
            Object {
              "backgroundColor": "black",
              "color": "white",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontFamily": "AGaramondPro-Regular",
              "fontSize": 20,
              "height": 40,
            },
            undefined,
          ]
        }
        value="bank"
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#666666",
          "height": 1,
        }
      }
    />
  </View>
  <RCTScrollView
    keyboardShouldPersistTaps="always"
    scrollEnabled={true}
    style={
      Object {
        "height": 182,
        "paddingTop": 16,
      }
    }
  >
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 40,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <Image
            source={
              Object {
                "uri": "https://d32dm0rphc51dk.cloudfront.net/X9vVvod7QY73ZwLDSZzljw/square.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 40,
                  "width": 40,
                },
                undefined,
              ]
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "white",
                  "fontFamily": "AGaramondPro-Regular",
                  "fontSize": 20,
                  "marginLeft": 13,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            Banksy
          </Text>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "height": 40,
              "marginBottom": 10,
            },
            undefined,
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <Image
            source={
              Object {
                "uri": "https://d32dm0rphc51dk.cloudfront.net/zKBFBZPGN-V5TljXtsSuEg/square.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 20,
                  "height": 40,
                  "width": 40,
                },
                undefined,
              ]
            }
          />
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "white",
                  "fontFamily": "AGaramondPro-Regular",
                  "fontSize": 20,
                  "marginLeft": 13,
                  "paddingTop": 8,
                },
                undefined,
              ]
            }
          >
            Banksy's Brother
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Search states:  Looks right when Looking for new results 1`] = `
<View>
  <View
    style={
      Array [
        undefined,
        Object {
          "flex": 1,
          "maxHeight": 40,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "height": 40,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={false}
        autoFocus={false}
        clearButtonMode="while-editing"
        keyboardAppearance="dark"
        onBlur={[Function]}
        onChangeText={undefined}
        onFocus={[Function]}
        placeholder="Artist/Designer Name"
        placeholderTextColor="#666666"
        returnKeyType="search"
        selectionColor="#cccccc"
        style={
          Array [
            Object {
              "backgroundColor": "black",
              "color": "white",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontFamily": "AGaramondPro-Regular",
              "fontSize": 20,
              "height": 40,
            },
            undefined,
          ]
        }
        value="ba"
      />
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="small"
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#666666",
          "height": 1,
        }
      }
    />
  </View>
  <RCTScrollView
    keyboardShouldPersistTaps="always"
    scrollEnabled={false}
    style={
      Object {
        "height": 182,
        "paddingTop": 16,
      }
    }
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`Search states:  Looks right when No query 1`] = `
<View>
  <View
    style={
      Array [
        undefined,
        Object {
          "flex": 1,
          "maxHeight": 40,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "height": 40,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCorrect={false}
        autoFocus={false}
        clearButtonMode="while-editing"
        keyboardAppearance="dark"
        onBlur={[Function]}
        onChangeText={undefined}
        onFocus={[Function]}
        placeholder="Artist/Designer Name"
        placeholderTextColor="#666666"
        returnKeyType="search"
        selectionColor="#cccccc"
        style={
          Array [
            Object {
              "backgroundColor": "black",
              "color": "white",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontFamily": "AGaramondPro-Regular",
              "fontSize": 20,
              "height": 40,
            },
            undefined,
          ]
        }
        value={null}
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#666666",
          "height": 1,
        }
      }
    />
  </View>
  <RCTScrollView
    keyboardShouldPersistTaps="always"
    scrollEnabled={false}
    style={
      Object {
        "height": 182,
        "paddingTop": 16,
      }
    }
  >
    <View />
  </RCTScrollView>
</View>
`;
